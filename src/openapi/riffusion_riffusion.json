{
    "paths": {
        "/predictions": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object", 
                                "properties": {
                                    "webhook_events_filter": {
                                        "type": "string", 
                                        "description": "By default, we will send requests to your webhook URL whenever there are new outputs or the prediction has finished. You can change which events trigger webhook requests by specifying webhook_events_filter in the prediction request: start: immediately on prediction start, output: each time a prediction generates an output (note that predictions can generate multiple outputs), logs: each time log output is generated by a prediction, completed: when the prediction reaches a terminal state (succeeded/canceled/failed)."
                                    }, 
                                    "input": {
                                        "required": true, 
                                        "properties": {
                                            "prompt_b": {
                                                "type": "string", 
                                                "description": "The second prompt to interpolate with the first, leave blank if no interpolation"
                                            }, 
                                            "prompt_a": {
                                                "default": "funky synth solo", 
                                                "type": "string", 
                                                "description": "The prompt for your audio"
                                            }, 
                                            "num_inference_steps": {
                                                "description": "Number of steps to run the diffusion model", 
                                                "default": 50, 
                                                "minimum": 1, 
                                                "type": "integer"
                                            }, 
                                            "denoising": {
                                                "description": "How much to transform input spectrogram", 
                                                "default": 0.75, 
                                                "maximum": 1, 
                                                "minimum": 0, 
                                                "type": "number"
                                            }, 
                                            "seed_image_id": {
                                                "description": "Seed spectrogram to use", 
                                                "default": "vibes", 
                                                "enum": [
                                                    "agile", 
                                                    "marim", 
                                                    "mask_beat_lines_80", 
                                                    "mask_gradient_dark", 
                                                    "mask_gradient_top_70", 
                                                    "mask_graident_top_fifth_75", 
                                                    "mask_top_third_75", 
                                                    "mask_top_third_95", 
                                                    "motorway", 
                                                    "og_beat", 
                                                    "vibes"
                                                ], 
                                                "type": "string"
                                            }, 
                                            "alpha": {
                                                "description": "Interpolation alpha if using two prompts. A value of 0 uses prompt_a fully, a value of 1 uses prompt_b fully", 
                                                "default": 0.5, 
                                                "maximum": 1, 
                                                "minimum": 0, 
                                                "type": "number"
                                            }
                                        }, 
                                        "schema": {
                                            "type": "object"
                                        }
                                    }, 
                                    "version": {
                                        "required": true, 
                                        "type": "string", 
                                        "description": "The ID of the model version", 
                                        "value": "8cf61ea6c56afd61d8f5b9ffd14d7c216c0a93844ce2d82ac1c9ecc9c7f24e05"
                                    }, 
                                    "webhook": {
                                        "type": "string", 
                                        "description": "An HTTPS URL for receiving a webhook when the prediction has new output. The webhook will be a POST request where the request body is the same as the response body of the get prediction operation. If there are network problems, we will retry the webhook a few times, so make sure it can be safely called more than once. Replicate will not follow redirects when sending webhook requests to your service, so be sure to specify a URL that will resolve without redirecting."
                                    }, 
                                    "stream": {
                                        "type": "boolen", 
                                        "description": "Request a URL to receive streaming output using server-sent events (SSE)."
                                    }
                                }
                            }
                        }
                    }
                }, 
                "responses": {
                    "200": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "spectrogram": {
                                        "format": "uri", 
                                        "type": "string", 
                                        "required": true
                                    }, 
                                    "audio": {
                                        "format": "uri", 
                                        "type": "string", 
                                        "required": true
                                    }
                                }, 
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }, 
                "description": "Create a prediction and get the output.", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Content-Type", 
                        "value": "application/json", 
                        "in": "header"
                    }
                ], 
                "summary": "Create a prediction and get the output."
            }, 
            "get": {
                "description": "List the first page of your predictions", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }
                ], 
                "summary": "List the first page of your predictions"
            }
        }, 
        "/predictions/{prediction_id}/cancel": {
            "post": {
                "description": "Cancel an in progress prediction", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "STRING"
                        }, 
                        "required": true, 
                        "description": "The ID of the prediction to cancel", 
                        "name": "prediction_id", 
                        "in": "path"
                    }
                ], 
                "summary": "Cancel an in progress prediction"
            }
        }, 
        "/predictions/{prediction_id}": {
            "get": {
                "description": "Get the latest version of a prediction by id", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "STRING"
                        }, 
                        "required": true, 
                        "description": "The ID of the prediction to get", 
                        "name": "prediction_id", 
                        "in": "path"
                    }
                ], 
                "summary": "Get the latest version of a prediction by id"
            }
        }
    }, 
    "servers": [
        "https://api.replicate.com"
    ], 
    "name": "riffusion_riffusion", 
    "description": "Stable diffusion for real-time music generation"
}