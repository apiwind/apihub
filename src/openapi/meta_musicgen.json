{
    "paths": {
        "/predictions": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object", 
                                "properties": {
                                    "webhook_events_filter": {
                                        "type": "string", 
                                        "description": "By default, we will send requests to your webhook URL whenever there are new outputs or the prediction has finished. You can change which events trigger webhook requests by specifying webhook_events_filter in the prediction request: start: immediately on prediction start, output: each time a prediction generates an output (note that predictions can generate multiple outputs), logs: each time log output is generated by a prediction, completed: when the prediction reaches a terminal state (succeeded/canceled/failed)."
                                    }, 
                                    "input": {
                                        "required": true, 
                                        "properties": {
                                            "top_k": {
                                                "default": 250, 
                                                "type": "integer", 
                                                "description": "Reduces sampling to the k most likely tokens."
                                            }, 
                                            "prompt": {
                                                "type": "string", 
                                                "description": "A description of the music you want to generate."
                                            }, 
                                            "temperature": {
                                                "default": 1, 
                                                "type": "number", 
                                                "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."
                                            }, 
                                            "continuation_end": {
                                                "minimum": 0, 
                                                "type": "integer", 
                                                "description": "End time of the audio file to use for continuation. If -1 or None, will default to the end of the audio clip."
                                            }, 
                                            "continuation": {
                                                "default": false, 
                                                "type": "boolean", 
                                                "description": "If `True`, generated music will continue from `input_audio`. Otherwise, generated music will mimic `input_audio`'s melody."
                                            }, 
                                            "output_format": {
                                                "description": "Output format for generated audio.", 
                                                "default": "wav", 
                                                "enum": [
                                                    "wav", 
                                                    "mp3"
                                                ], 
                                                "type": "string"
                                            }, 
                                            "input_audio": {
                                                "format": "uri", 
                                                "type": "string", 
                                                "description": "An audio file that will influence the generated music. If `continuation` is `True`, the generated music will be a continuation of the audio file. Otherwise, the generated music will mimic the audio file's melody."
                                            }, 
                                            "multi_band_diffusion": {
                                                "default": false, 
                                                "type": "boolean", 
                                                "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Only works with non-stereo models."
                                            }, 
                                            "model_version": {
                                                "description": "Model to use for generation", 
                                                "default": "stereo-melody-large", 
                                                "enum": [
                                                    "stereo-melody-large", 
                                                    "stereo-large", 
                                                    "melody-large", 
                                                    "large"
                                                ], 
                                                "type": "string"
                                            }, 
                                            "continuation_start": {
                                                "description": "Start time of the audio file to use for continuation.", 
                                                "default": 0, 
                                                "minimum": 0, 
                                                "type": "integer"
                                            }, 
                                            "classifier_free_guidance": {
                                                "default": 3, 
                                                "type": "integer", 
                                                "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."
                                            }, 
                                            "duration": {
                                                "default": 8, 
                                                "type": "integer", 
                                                "description": "Duration of the generated audio in seconds."
                                            }, 
                                            "top_p": {
                                                "default": 0, 
                                                "type": "number", 
                                                "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."
                                            }, 
                                            "normalization_strategy": {
                                                "description": "Strategy for normalizing audio.", 
                                                "default": "loudness", 
                                                "enum": [
                                                    "loudness", 
                                                    "clip", 
                                                    "peak", 
                                                    "rms"
                                                ], 
                                                "type": "string"
                                            }, 
                                            "seed": {
                                                "type": "integer", 
                                                "description": "Seed for random number generator. If None or -1, a random seed will be used."
                                            }
                                        }, 
                                        "schema": {
                                            "type": "object"
                                        }
                                    }, 
                                    "version": {
                                        "required": true, 
                                        "type": "string", 
                                        "description": "The ID of the model version", 
                                        "value": "671ac645ce5e552cc63a54a2bbff63fcf798043055d2dac5fc9e36a837eedcfb"
                                    }, 
                                    "webhook": {
                                        "type": "string", 
                                        "description": "An HTTPS URL for receiving a webhook when the prediction has new output. The webhook will be a POST request where the request body is the same as the response body of the get prediction operation. If there are network problems, we will retry the webhook a few times, so make sure it can be safely called more than once. Replicate will not follow redirects when sending webhook requests to your service, so be sure to specify a URL that will resolve without redirecting."
                                    }, 
                                    "stream": {
                                        "type": "boolen", 
                                        "description": "Request a URL to receive streaming output using server-sent events (SSE)."
                                    }
                                }
                            }
                        }
                    }
                }, 
                "responses": {
                    "200": {
                        "application/json": {
                            "schema": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }, 
                "description": "Create a prediction and get the output.", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Content-Type", 
                        "value": "application/json", 
                        "in": "header"
                    }
                ], 
                "summary": "Create a prediction and get the output."
            }, 
            "get": {
                "description": "List the first page of your predictions", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }
                ], 
                "summary": "List the first page of your predictions"
            }
        }, 
        "/predictions/{prediction_id}/cancel": {
            "post": {
                "description": "Cancel an in progress prediction", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "STRING"
                        }, 
                        "required": true, 
                        "description": "The ID of the prediction to cancel", 
                        "name": "prediction_id", 
                        "in": "path"
                    }
                ], 
                "summary": "Cancel an in progress prediction"
            }
        }, 
        "/predictions/{prediction_id}": {
            "get": {
                "description": "Get the latest version of a prediction by id", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "STRING"
                        }, 
                        "required": true, 
                        "description": "The ID of the prediction to get", 
                        "name": "prediction_id", 
                        "in": "path"
                    }
                ], 
                "summary": "Get the latest version of a prediction by id"
            }
        }
    }, 
    "servers": [
        "https://api.replicate.com"
    ], 
    "name": "meta_musicgen", 
    "description": "Generate music from a prompt or melody"
}