{
    "paths": {
        "/predictions": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object", 
                                "properties": {
                                    "webhook_events_filter": {
                                        "type": "string", 
                                        "description": "By default, we will send requests to your webhook URL whenever there are new outputs or the prediction has finished. You can change which events trigger webhook requests by specifying webhook_events_filter in the prediction request: start: immediately on prediction start, output: each time a prediction generates an output (note that predictions can generate multiple outputs), logs: each time log output is generated by a prediction, completed: when the prediction reaches a terminal state (succeeded/canceled/failed)."
                                    }, 
                                    "input": {
                                        "required": true, 
                                        "properties": {
                                            "scale": {
                                                "description": "Scale for classifier-free guidance", 
                                                "default": 9, 
                                                "maximum": 30, 
                                                "minimum": 0.1, 
                                                "type": "number"
                                            }, 
                                            "prompt": {
                                                "required": true, 
                                                "type": "string", 
                                                "description": "Prompt for the model"
                                            }, 
                                            "image": {
                                                "format": "uri", 
                                                "type": "string", 
                                                "description": "Input image", 
                                                "required": true
                                            }, 
                                            "low_threshold": {
                                                "description": "[canny only] Line detection low threshold", 
                                                "default": 100, 
                                                "maximum": 255, 
                                                "minimum": 1, 
                                                "type": "integer"
                                            }, 
                                            "negative_prompt": {
                                                "default": "Longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality", 
                                                "type": "string", 
                                                "description": "Negative prompt"
                                            }, 
                                            "return_reference_image": {
                                                "default": false, 
                                                "type": "boolean", 
                                                "description": "whether to return the reference image along with the output"
                                            }, 
                                            "eta": {
                                                "default": 0, 
                                                "type": "number", 
                                                "description": "Controls the amount of noise that is added to the input data during the denoising diffusion process. Higher value -> more noise"
                                            }, 
                                            "steps": {
                                                "default": 20, 
                                                "type": "integer", 
                                                "description": "Steps"
                                            }, 
                                            "scheduler": {
                                                "description": "Choose a scheduler.", 
                                                "default": "DDIM", 
                                                "enum": [
                                                    "DDIM", 
                                                    "DPMSolverMultistep", 
                                                    "HeunDiscrete", 
                                                    "K_EULER_ANCESTRAL", 
                                                    "K_EULER", 
                                                    "KLMS", 
                                                    "PNDM", 
                                                    "UniPCMultistep"
                                                ], 
                                                "type": "string"
                                            }, 
                                            "num_outputs": {
                                                "description": "Number of images to output (higher values may OOM)", 
                                                "default": 1, 
                                                "maximum": 4, 
                                                "minimum": 1, 
                                                "type": "integer"
                                            }, 
                                            "high_threshold": {
                                                "description": "[canny only] Line detection high threshold", 
                                                "default": 200, 
                                                "maximum": 255, 
                                                "minimum": 1, 
                                                "type": "integer"
                                            }, 
                                            "image_resolution": {
                                                "description": "Resolution of output image (will be scaled to this as its smaller dimension)", 
                                                "default": 512, 
                                                "enum": [
                                                    256, 
                                                    512, 
                                                    768
                                                ], 
                                                "type": "integer"
                                            }, 
                                            "seed": {
                                                "type": "integer", 
                                                "description": "Seed"
                                            }, 
                                            "structure": {
                                                "enum": [
                                                    "canny", 
                                                    "depth", 
                                                    "hed", 
                                                    "hough", 
                                                    "normal", 
                                                    "pose", 
                                                    "scribble", 
                                                    "seg"
                                                ], 
                                                "type": "string", 
                                                "description": "Controlnet structure to condition on", 
                                                "required": true
                                            }
                                        }, 
                                        "schema": {
                                            "type": "object"
                                        }
                                    }, 
                                    "version": {
                                        "required": true, 
                                        "type": "string", 
                                        "description": "The ID of the model version", 
                                        "value": "795433b19458d0f4fa172a7ccf93178d2adb1cb8ab2ad6c8fdc33fdbcd49f477"
                                    }, 
                                    "webhook": {
                                        "type": "string", 
                                        "description": "An HTTPS URL for receiving a webhook when the prediction has new output. The webhook will be a POST request where the request body is the same as the response body of the get prediction operation. If there are network problems, we will retry the webhook a few times, so make sure it can be safely called more than once. Replicate will not follow redirects when sending webhook requests to your service, so be sure to specify a URL that will resolve without redirecting."
                                    }, 
                                    "stream": {
                                        "type": "boolen", 
                                        "description": "Request a URL to receive streaming output using server-sent events (SSE)."
                                    }
                                }
                            }
                        }
                    }
                }, 
                "responses": {
                    "200": {
                        "application/json": {
                            "schema": {
                                "schema": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                }, 
                "description": "Create a prediction and get the output.", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Content-Type", 
                        "value": "application/json", 
                        "in": "header"
                    }
                ], 
                "summary": "Create a prediction and get the output."
            }, 
            "get": {
                "description": "List the first page of your predictions", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }
                ], 
                "summary": "List the first page of your predictions"
            }
        }, 
        "/predictions/{prediction_id}/cancel": {
            "post": {
                "description": "Cancel an in progress prediction", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "STRING"
                        }, 
                        "required": true, 
                        "description": "The ID of the prediction to cancel", 
                        "name": "prediction_id", 
                        "in": "path"
                    }
                ], 
                "summary": "Cancel an in progress prediction"
            }
        }, 
        "/predictions/{prediction_id}": {
            "get": {
                "description": "Get the latest version of a prediction by id", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "name": "Authorization", 
                        "value": "Bearer $REPLICATE_API_TOKEN", 
                        "in": "header"
                    }, 
                    {
                        "schema": {
                            "type": "STRING"
                        }, 
                        "required": true, 
                        "description": "The ID of the prediction to get", 
                        "name": "prediction_id", 
                        "in": "path"
                    }
                ], 
                "summary": "Get the latest version of a prediction by id"
            }
        }
    }, 
    "servers": [
        "https://api.replicate.com"
    ], 
    "name": "rossjillian_controlnet", 
    "description": "Control diffusion models"
}